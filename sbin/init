#!/sbin/busybox sh
cd /

busybox mount -t proc proc /proc
busybox mount -t sysfs sysfs /sys
tar xvf /res/misc/dev.tar

# Set / rw
/sbin/busybox mount -t rootfs -o remount,rw rootfs

if grep -q bootmode=2 /proc/cmdline ; then
	# Recovery mode
	echo 0 > /proc/sys/kernel/rom_feature_set
	cp /res/images/recovery-icon.png /res/images/icon_clockwork.png
	cp -a /recovery.rc /init.rc
	exec /sbin/init.recovery
fi;

if busybox grep -q 1 /sys/class/power_supply/battery/batt_lp_charging ; then
	# low power mode
	echo 0 > /proc/sys/kernel/rom_feature_set
	cp /res/images/recovery-icon.png /res/images/icon_clockwork.png
	cp -a lpm.rc init.rc
	rm init.smdk4210.rc
	exec /sbin/init.recovery
fi;

SECONDROM=1
NOBOOTLOGO=0
mount -t ext4 -o rw /dev/block/mmcblk0p12 /preload
mount -t vfat /dev/block/mmcblk0p11 /mnt/sdcard && ( touch /mnt/sdcard/clockworkmod/.nomedia )
mount -t vfat /dev/block/mmcblk1p1 /mnt/emmc && ( touch /mnt/emmc/clockworkmod/.nomedia )

[ -f /preload/build.prop ] || SECONDROM=0
[ -f /mnt/sdcard/.secondrom/data.img ] || SECONDROM=0
[ -f /mnt/sdcard/.secondrom/cache.img ] || SECONDROM=0
[ -f /mnt/sdcard/.nobootlogo ] && NOBOOTLOGO=1 && SECONDROM=0
umount /mnt/sdcard
umount /mnt/emmc

if [[ "$NOBOOTLOGO" == "1" && "$SECONDROM" == "0" ]]; then
	/sbin/choose_rom
else
	/sbin/choose_rom $SECONDROM
fi;

if [ "$?" == "1" ]; then
	SECONDROM=1
else
	SECONDROM=0
fi;

/sbin/busybox mount -t ext4 /res/dev/system /system

# copy new hosts-file only if user dont have custome ADBLOCKER file.
CHECKHOSTS=`cat /system/etc/hosts | grep "127.0.0.1 www.link" | cut -c 10-18 | tail -n 1`
if [ "$CHECKHOSTS" != " www.link" ]; then
	cp -a /res/misc/hosts /system/etc/
	chmod 644 /system/etc/hosts
else
	echo "User has AD custom HOSTS file"
fi;

# copy new hosts-file only if user dont have custome ADBLOCKER file.
CHECKHOSTS=`cat /preload/etc/hosts | grep "127.0.0.1 www.link" | cut -c 10-18 | tail -n 1`
if [ "$CHECKHOSTS" != " www.link" ]; then
        cp -a /res/misc/hosts /preload/etc/
        chmod 644 /preload/etc/hosts
else
	echo "User has AD custom HOSTS file"
fi;

# copy new Kernel modules to /system/lib/modules and to second rom system if exist.
if [ ! -d /system/lib/modules ]; then
	mkdir /system/lib/modules
	chmod 755 /system/lib/modules/
fi;
rm -f /system/lib/modules/*.ko
cp /lib/modules/*.ko /system/lib/modules/
chmod 755 /system/lib/modules/*.ko

mount -o remount,rw /preload
if [ -d /preload/lib/ ]; then
	if [ ! -d /preload/lib/modules ]; then
		mkdir /preload/lib/modules
		chmod 755 /preload/lib/modules
	fi;
	rm -f /preload/lib/modules/*.ko
	cp /lib/modules/*.ko /preload/lib/modules/
	chmod 755 /preload/lib/modules/*.ko
fi;

if [ -f /system/recovery.cpio.gz ]; then
	mount -o remount,rw /
	zcat /system/recovery.cpio.gz | cpio -idmu
fi;

AOSP=0
MIUI=0
B2G=0
JELLY=0
CM10=0
S4A=0

[ -d /system/b2g ] && B2G=1
[ -f /system/framework/framework-miui.jar ] && MIUI=1
[ -f /system/framework/miui-framework.jar ] && MIUI=1
[ -f /system/lib/ssl/engines/libkeystore.so ] && JELLY=1
[ -f /system/framework/seccamera.jar ] || CM10=1
[ -f /system/framework/framework2.jar ] || AOSP=1
[ "`/sbin/busybox grep -i android-htc-rev /system/build.prop`" ] && S4A=1
[ "`/sbin/busybox grep Slim /system/build.prop`" ] && SLIM=1

# One more time set / rw just for good sleep.
/sbin/busybox mount -t rootfs -o remount,rw rootfs

#############################
# Partition global tuning!
#############################

PARTITION_TUNING () {
	# unmounting DATA, CACHE, and PAYLOAD-SEC-ROM
	/sbin/busybox umount -l /data > /dm-log
	/sbin/busybox umount -l /cache >> /dm-log

	# setting journal_data_ordered to DATA, CACHE, and PAYLOAD-SEC-ROM
	/sbin/tune2fs -O ^has_journal /res/dev/cache >> /dm-log # Removed journal
	/sbin/tune2fs -O has_journal /res/dev/data >> /dm-log # Restore journal / check if ok.
	/sbin/tune2fs -O has_journal /dev/block/mmcblk0p12 >> /dm-log # Restore journal / check if ok.
	/sbin/tune2fs -o journal_data_ordered /res/dev/data >> /data-log #DATA
	/sbin/tune2fs -o journal_data_ordered /res/dev/cache >> /cache-log #CACHE
	/sbin/tune2fs -o journal_data_ordered /dev/block/mmcblk0p12 > /preload-log #PRELOAD
	/sbin/tune2fs -I 256 /res/dev/data >> /dm-log
	/sbin/tune2fs -I 256 /res/dev/cache >> /dm-log
	/sbin/tune2fs -I 256 /res/dev/system >> /dm-log
	/sbin/tune2fs -I 256 /dev/block/mmcblk0p12 >> /dm-log # SEC-SYSTEM /preload
	# checking Partitions X2! needed for clean flag
	/sbin/e2fsck -p /res/dev/data
	/sbin/e2fsck -p /res/dev/data > /data-log
	/sbin/e2fsck -p /res/dev/cache
	/sbin/e2fsck -p /res/dev/cache > /cache-log
}

SYSTEM_UMOUNT () {
	/sbin/busybox umount /preload
	/sbin/busybox umount /system
}

#############################
# END Partition global tuning!
#############################


if [ "$S4A" == "1" ]; then
	echo 0 > /proc/sys/kernel/rom_feature_set
	mv /res/misc/Sense4All-ROM/init.s4a /init.rc
	mv /res/misc/Sense4All-ROM/init.s4a.2 /init.rc.2

	# Start ROM!
	PARTITION_TUNING
	SYSTEM_UMOUNT
	exec /sbin/init.samsung
fi;

if [ "$B2G" == "1" ]; then
        echo 0 > /proc/sys/kernel/rom_feature_set
	cp -a /res/misc/B2G-ROM/* /	

        if [ "$SECONDROM" == "1" ]; then
                mv /init.smdk4210.rc.2 /init.smdk4210.rc
                mv /init.rc.2 /init.rc
        fi;

        # Start ROM!
	PARTITION_TUNING
	SYSTEM_UMOUNT
        exec /sbin/init.samsung
fi;

if [ "$JELLY" == "1" ]; then
	if [ "$CM10" == 1 ]; then
        	echo 1 > /proc/sys/kernel/rom_feature_set
		cp -a /res/misc/JellyB-CM-AOKP/* /
		rm -f init.rc.2
	else
		echo 0 > /proc/sys/kernel/rom_feature_set
		cp /res/misc/JellyB-SAMMY/* /
	fi;

	rm -rf /vendor

        if [ "$SECONDROM" == "1" ]; then
		if [ -e /init.smdk4210.rc.2 ]; then
                	mv /init.smdk4210.rc.2 /init.smdk4210.rc
		fi;
        fi;

        # Start ROM!
	PARTITION_TUNING
	SYSTEM_UMOUNT
        exec /sbin/init.samsung
fi;

if [ "$SLIM" == "1" ]; then
	cp -a /res/misc/CM-ROM/* /
        echo 1 > /proc/sys/kernel/rom_feature_set
        cp -a /res/misc/libsqlite.so /system/lib/
        chmod 755 /system/lib/libsqlite.so
        rm /init.rc.2
        
        if [ "$SECONDROM" == "1" ]; then
                mv /init.smdk4210.rc.2 /init.smdk4210.rc
        fi;

        # Start ROM!
	PARTITION_TUNING
	SYSTEM_UMOUNT
        exec /sbin/init.samsung
fi;

if [ "$AOSP" == "1" ]; then
	cp -a /res/misc/CM-ROM/* /
	echo 1 > /proc/sys/kernel/rom_feature_set
	cp -a /res/misc/libsqlite.so /system/lib/
	chmod 755 /system/lib/libsqlite.so
	rm /init.rc.2

	if [ "$SECONDROM" == "1" ]; then
		mv /init.smdk4210.rc.2 /init.smdk4210.rc
	fi;

	# Start ROM!
	PARTITION_TUNING
	SYSTEM_UMOUNT
	exec /sbin/init.samsung
fi;

if [ "$MIUI" == "1" ]; then
	cp -a /res/misc/Miui-ROM/* /
	echo 0 > /proc/sys/kernel/rom_feature_set

	if [ "$SECONDROM" == "1" ]; then
		mv /init.smdk4210.rc.2 /init.smdk4210.rc
		mv /init.rc.2 /init.rc
	fi;

	# Start ROM!
	PARTITION_TUNING
	SYSTEM_UMOUNT
	exec /sbin/init.samsung
fi;

# If not detected ROM / SAMMY ROM installed, then:
echo 0 > /proc/sys/kernel/rom_feature_set

if [ "$SECONDROM" == "1" ]; then
	mv /init.smdk4210.rc.2 /init.smdk4210.rc
	mv /init.rc.2 /init.rc
fi;

# Start ROM
PARTITION_TUNING
SYSTEM_UMOUNT
exec /sbin/init.samsung

