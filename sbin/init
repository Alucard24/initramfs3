#!/sbin/busybox sh
cd /

busybox mount -t proc proc /proc
busybox mount -t sysfs sysfs /sys
tar xvf /res/misc/dev.tar

# Set / rw
/sbin/busybox mount -t rootfs -o remount,rw rootfs

if grep -q bootmode=2 /proc/cmdline ; then
	# Recovery mode
	echo 0 > /proc/sys/kernel/rom_feature_set
	mv /recovery.rc /init.rc
	cp /res/misc/recovery-init/init.smdk4210.rc /init.smdk4210.rc
	exec /sbin/init.recovery
fi;

if busybox grep -q 1 /sys/class/power_supply/battery/batt_lp_charging ; then
	# low power mode
	echo 0 > /proc/sys/kernel/rom_feature_set
	cp lpm.rc init.rc
	rm init.smdk4210.rc
	exec /sbin/init.recovery
fi;

SECONDROM=1
NOBOOTLOGO=0
mount -t ext4 -o rw /dev/block/mmcblk0p12 /preload
mount -t vfat /dev/block/mmcblk0p11 /mnt/sdcard

[ -f /preload/build.prop ] || SECONDROM=0
[ -f /mnt/sdcard/.secondrom/data.img ] || SECONDROM=0
[ -f /mnt/sdcard/.secondrom/cache.img ] || SECONDROM=0
[ -f /mnt/sdcard/.nobootlogo ] && NOBOOTLOGO=1
umount /mnt/sdcard

if [[ "$NOBOOTLOGO" == "1" && "$SECONDROM" == "0" ]]; then
	/sbin/choose_rom
else
	/sbin/choose_rom $SECONDROM
fi;

if [ "$?" == "1" ]; then
	SECONDROM=1
else
	SECONDROM=0
fi;

/sbin/busybox mount -t ext4 /res/dev/system /system

# copy new hosts-file only if user dont have custome ADBLOCKER file.
CHECKHOSTS=`cat /system/etc/hosts | grep "127.0.0.1 www.link" | cut -c 10-18 | tail -n 1`
if [ "$CHECKHOSTS" != " www.link" ]; then
	cp -a /res/misc/hosts /system/etc/
	chmod 644 /system/etc/hosts
else
	echo "User has AD custom HOSTS file"
fi;

# copy new hosts-file only if user dont have custome ADBLOCKER file.
CHECKHOSTS=`cat /preload/etc/hosts | grep "127.0.0.1 www.link" | cut -c 10-18 | tail -n 1`
if [ "$CHECKHOSTS" != " www.link" ]; then
        cp -a /res/misc/hosts /preload/etc/
        chmod 644 /preload/etc/hosts
else
	echo "User has AD custom HOSTS file"
fi;

# copy new Kernel modules to /system/lib/modules and to second rom system if exist.
if [ ! -d /system/lib/modules ]; then
	mkdir /system/lib/modules
	chmod 755 /system/lib/modules/
fi;
rm -f /system/lib/modules/*.ko
cp /lib/modules/*.ko /system/lib/modules/
chmod 777 /system/lib/modules/*.ko

mount -o remount,rw /preload
if [ -d /preload/lib/ ]; then
	if [ ! -d /preload/lib/modules ]; then
		mkdir /preload/lib/modules
		chmod 755 /preload/lib/modules
	fi;
	rm -f /preload/lib/modules/*.ko
	cp /lib/modules/*.ko /preload/lib/modules/
	chmod 775 /preload/lib/modules/*.ko
fi;
umount /preload

if [ -f /system/recovery.cpio.gz ]; then
	mount -o remount,rw /
	zcat /system/recovery.cpio.gz | cpio -idmu
fi;

AOSP=0
MIUI=0
B2G=0
JELLY=0

[ -d /system/b2g ] && B2G=1
[ -f /system/framework/framework2.jar ] || AOSP=1
[ "`/sbin/busybox grep -i Slim /system/build.prop`" ] && SLIM=1
[ "`/sbin/busybox grep -i aosp /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i hydrog /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i DragonICS /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i =aokp /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i CyanogenMod /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i AdyScorpius /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i cMIUI /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i insanity /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i Oxygen /system/build.prop`" ] && AOSP=1
[ "`/sbin/busybox grep -i =MIUI /system/build.prop`" ] && MIUI=1
[ -f /system/framework/framework-miui.jar ] && MIUI=1
[ -f /system/lib/ssl/engines/libkeystore.so ] && JELLY=1

# One more time set / rw just for good sleep.
/sbin/busybox mount -t rootfs -o remount,rw rootfs

#
if [ "$SLIM" == 1 ]; then
	echo 1 > /proc/sys/kernel/rom_feature_set
	cp -a /res/misc/cyano/sql/libsqlite.so /system/lib/
	chmod 777 /system/lib/libsqlite.so
	rm /init.rc.2
	patch -p1 < /res/misc/cm9.patch
	mv /sbin/init.no-bash-cm9 /sbin/init.samsung

	if [ "$SECONDROM" == "1" ]; then
		mv /init.smdk4210.rc.2 /init.smdk4210.rc
	fi;

	# Start ROM!
	exec /sbin/init.samsung
fi;

if [ "$JELLY" == 1 ]; then
        cp -a /res/misc/JellyB-rom/* /
        echo 0 > /proc/sys/kernel/rom_feature_set

        if [ ! -e /system/xbin/bash ]; then
                mv /sbin/init.no-bash-jellyB /sbin/init.samsung
	else
		mv /sbin/init.jellyB /sbin/init.samsung
        fi;

        if [ "$SECONDROM" == "1" ]; then
                mv /init.smdk4210.rc.2 /init.smdk4210.rc
                mv /init.rc.2 /init.rc
        fi;

        # Start ROM!
        exec /sbin/init.samsung
fi;

if [ "$B2G" == 1 ]; then
	cp -a /res/misc/B2G-rom/* /
	echo 0 > /proc/sys/kernel/rom_feature_set

	if [ ! -e /system/xbin/bash ]; then
		mv /sbin/init.no-bash-samsung /sbin/init.samsung
	fi;

	if [ "$SECONDROM" == "1" ]; then
		mv /init.smdk4210.rc.2 /init.smdk4210.rc
		mv /init.rc.2 /init.rc
	fi;

	# Start ROM!
	exec /sbin/init.samsung	
fi;

if [ "$AOSP" == 1 ]; then
	echo 1 > /proc/sys/kernel/rom_feature_set
	cp -a /res/misc/cyano/sql/libsqlite.so /system/lib/
	chmod 777 /system/lib/libsqlite.so
	rm /init.rc.2
	patch -p1 < /res/misc/cm9.patch

	if [ -e /system/xbin/bash ]; then
		mv /sbin/init.cm9 /sbin/init.samsung
	else
		mv /sbin/init.no-bash-cm9 /sbin/init.samsung
	fi;

	if [ "$SECONDROM" == "1" ]; then
		mv /init.smdk4210.rc.2 /init.smdk4210.rc
	fi;

	# Start ROM!
	exec /sbin/init.samsung
fi;

if [ "$MIUI" == 1 ]; then
	patch -p1 < /res/misc/miui.patch
	echo 0 > /proc/sys/kernel/rom_feature_set

	if [ ! -e /system/xbin/bash ]; then
		mv /sbin/init.no-bash-samsung /sbin/init.samsung
	fi;

	if [ "$SECONDROM" == "1" ]; then
		mv /init.smdk4210.rc.2 /init.smdk4210.rc
		mv /init.rc.2 /init.rc
	fi;

	# Start ROM!
	exec /sbin/init.samsung
fi;

# If not detected ROM installed then:
echo 0 > /proc/sys/kernel/rom_feature_set

if [ "$SECONDROM" == "1" ]; then
	mv /init.smdk4210.rc.2 /init.smdk4210.rc
	mv /init.rc.2 /init.rc
fi;
	
if [ ! -e /system/xbin/bash ]; then
	mv /sbin/sbin/init.no-bash-samsung /sbin/init.samsung
fi;

# Start ROM
exec /sbin/init.samsung

